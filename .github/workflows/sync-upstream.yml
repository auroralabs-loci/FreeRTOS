name: Sync Upstream
on:
  schedule:
    - cron: '45 */6 * * *'    # 00:45, 06:45, 12:45, 18:45
  workflow_dispatch:

permissions:
  actions: write
  contents: write
concurrency:
  group: sync-upstream
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest

    env:
      UPSTREAM_REPO: '${{ vars.UPSTREAM_REPO }}'
      MAIN_BRANCH: "main"

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.MAIN_BRANCH }}
          fetch-depth: 0

      - name: Get current MAIN_BRANCH commit
        id: before
        shell: bash -euo pipefail {0}
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Sync MAIN_BRANCH with upstream
        shell: bash -euo pipefail {0}
        run: |
          echo "> Add upstream remote"
          git remote add upstream https://github.com/${UPSTREAM_REPO} || true
          echo "> Fetch upstream changes"
          git fetch upstream
          echo "> Update MAIN_BRANCH with upstream default branch"
          git rev-parse --abbrev-ref upstream/HEAD
          git merge upstream/HEAD --ff-only
          git push origin main

      - name: Get updated MAIN_BRANCH commit
        id: after
        shell: bash -euo pipefail {0}
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Check if MAIN_BRANCH was updated
        id: check
        run: |
          if [ "${{ steps.before.outputs.sha }}" != "${{ steps.after.outputs.sha }}" ]; then
            echo "updated=true" >> $GITHUB_OUTPUT
            echo "> $ branch was updated"
          else
            echo "updated=false" >> $GITHUB_OUTPUT
            echo "> No changes from upstream"
          fi

      - name: Trigger loci-analysis workflow
        if: steps.check.outputs.updated == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash -euo pipefail {0}
        run: |
          echo "> Run LCOI analysis workflow"
          gh workflow run loci-analysis.yml --ref overlay -f branch=main
